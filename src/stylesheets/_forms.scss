//
// Forms
// --------------------------------------------------


// Normalize non-controls
//
// Restyle and baseline non-control form elements.
fieldset {
    padding: 0;
    margin: 0;
    border: 0;
    // Chrome and Firefox set a `min-width: min-content;` on fieldsets,
    // so we reset that to ensure it behaves more like a standard block element.
    // See https://github.com/twbs/bootstrap/issues/12359.
    min-width: 0;
}

input {
    font-size:  $font-size-base;
    border: 0;
    -webkit-appearance: none;
}

label {
    display: inline-block;
    max-width: 100%; // Force IE8 to wrap long content (see https://github.com/twbs/bootstrap/issues/13141)
}
button {
    padding: 0;
}

// input styles

.field {
    position: relative;
    height: 50px;
    background: $white;
    border: 1px solid $gray-base;
    border-radius: $radius-base;
    overflow: hidden;
    + .field {
        margin-top: 24px;
    }
    input {
        // opacity: 0;
        padding: 0;
        position: absolute;
        left: 0;
        top: 0;
        bottom: 0;
        padding: 0 50px 0 20px;
        width: 100%;
        height: 100%;
        border-radius: $radius-base;
        &:not(:placeholder-shown),
        &:focus {
            & + label {
                --label-y: -17px;
                --label-scale: .8;
                --label-color: $gray-base;
            }
        }
        &:focus {
            & + label + .cursor {
                animation: cursor 1s ease infinite;
            }
        }
    }
    .delete {
        position: absolute;
        top: 0;
        right: 0;
        width: 48px;
        height: 48px;
        text-align: center;
        .icon {
            display: block;
            position: absolute;
            top: 50%;
            left: 50%;
            font-size: 0;
            width: 16px;
            height: 16px;
            border-radius: 50%;
            transform: translate(-50%, -50%);
            background: #C4C4C4;
            &::before,
            &::after {
                content: '';
                display: block;
                position: absolute;
                top: 50%;
                left: 50%;
                width: 8px;
                height: 2px;
                background-color: #fff;
            }
            &::before {
                transform: translate(-50%, -50%) rotate(45deg);
            }
            &::after {
                transform: translate(-50%, -50%) rotate(135deg);
            }
        }
    }
    .cursor {
        position: absolute;
        height: 15px;
        width: 1px;
        left: 0;
        top: 10px;
        background: var(--primary);
        opacity: 0;
        transform: translateX(var(--cursor-x, 0));
        transition: transform var(--cursor-duration, .1s);
    }
    .line,
    .tick {
        display: block;
        pointer-events: none;
        position: absolute;
        left: var(--left, 0);
        bottom: var(--bottom, -10px);
        opacity: var(--opacity, 1);
        transition: opacity 0s linear var(--tick-opacity-delay, .5s);
        svg {
            stroke: $gray-lighter;
            stroke-width: 1;
            fill: none;
            display: block;
            width: var(--width, 900px);
            height: var(--height, 22px);
            transform: translateX(var(--x, var(--line-x, 0)));
            transition: transform var(--line-x-duration, 0s) ease, stroke .3s;
        }
    }
    .line {
        overflow: hidden;
        width: 100%;
        transform-origin: 0 50%;
    }
    .tick {
        --left: 100%;
        --bottom: -1px;
        --width: 32px;
        --height: 28px;
        --x: -16px;
        --opacity: 0;
        svg {
            stroke: $gray-lighter;
            stroke-dasharray: 17 81;
            stroke-dashoffset: var(--tick-offset, 34px);
            transition: stroke-dashoffset .5s ease var(--tick-delay, 0s), stroke .5s ease var(--tick-delay, 0s);
        }
    }
    .clear {
        position: relative;
        padding: 0;
        margin: 12px 12px 12px 0;
        background: var(--b, transparent);
        transition: background .2s;
        border-radius: 50%;
        opacity: var(--clear-opacity);
        transform: scale(var(--clear-scale)) translateZ(0);
        &:before {
            content: '';
            position: absolute;
            top: 0;
            bottom: 0;
            right: 12px;
            left: var(--clear-swipe-left);
            background: var(--background);
            transform-origin: 100% 50%;
            transform: translateX(var(--clear-swipe)) scaleX(var(--clear-swipe-x)) translateZ(0);
        }
        svg {
            display: block;
            position: relative;
            z-index: 1;
            width: 24px;
            height: 24px;
            outline: none;
            cursor: pointer;
            fill: none;
            stroke-width: 1.5;
            stroke-linecap: round;
            stroke-linejoin: round;
            stroke: var(--close);
            transform: translateX(var(--clear-x)) rotate(var(--clear-rotate)) translateZ(0);
            path {
                transition: stroke .2s;
                &.arrow {
                    stroke: $black;
                    stroke-dasharray: 4px;
                    stroke-dashoffset: var(--clear-arrow-offset);
                    opacity: var(--clear-arrow-o);
                    transform: translate(var(--clear-arrow-x), var(--clear-arrow-y)) translateZ(0);
                    &:last-child {
                        stroke-dashoffset: var(--clear-arrow-offset-second);
                    }
                }
                &.line {
                    stroke-dasharray: var(--clear-line-array) 28.5px;
                    stroke-dashoffset: var(--clear-line-offset);
                }
                &.long {
                    stroke: $black;
                    stroke-dasharray: var(--clear-long-array) 15.5px;
                    stroke-dashoffset: var(--clear-long-offset);
                    opacity: var(--clear-arrow-o);
                    transform: translate(var(--clear-arrow-x), var(--clear-arrow-y)) translateZ(0);
                }
            }
        }
        &:hover {
            --b: $gray-lighter;
        }
    }
}

.label {
    color: $gray-base;
    font-size: $font-size-base;
    margin-bottom: 5px;
    ~ .label {
        margin-top: 24px;
    }
}
.radio,
.checkbox,
.switch {
    // color 
    --c-active: #275EFE;
    --c-active-inner: #FFFFFF;
    --c-default: #D2D6E9;
    --c-default-dark: #C7CBDF;
    --c-black: #1B1B22;

    position: relative;
    border-radius: var(--border-radius, 12px) var(--border-radius-corner, 12px) var(--border-radius, 12px) var(--border-radius, 12px);
    
    input {
        appearance: none;
        outline: none;
        border: none;
        background: var(--input-background, none);
        display: block;
        cursor: pointer;
        margin: 0;
        padding: 0;
        border-radius: inherit;
        width: var(--input-width, 24px);
        height: var(--input-height, 24px);
    }
    svg {
        display: block;
        position: absolute;
        left: 0;
        right: 0;
        bottom: 0;
        top: 0;
        pointer-events: none;
        fill: var(--c-active-inner);
        transform: scale(1.01) translateZ(0);
    }
}

.radio,
.checkbox {
    input {
        --border-color: var(--c-default);
        --border-width: 2px;
        box-shadow: inset 0 0 0 var(--border-width) var(--border-color);
        &:checked {
            --border-color: var(--c-active);
        }
        &:not(:checked) {
            transition: box-shadow .25s;
            &:hover {
                --border-width: 3px;
                --border-color: var(--c-active);
            }
        }
    }
}

.radio {
    input {
        &:checked {
            --border-width: 6.75px;
        }
        & + svg {
            --top-y: 0;
            --dot-y: -17px;
            --drop-y: -14px;
            --top-s-x: 1.75;
            --top-s-y: 1;
            .top {
                transform-origin: 12px -12px;
                transform: translateY(var(--top-y)) scale(var(--top-s-x), var(--top-s-y)) translateZ(0);
            }
            .dot {
                transform: translateY(var(--dot-y)) translateZ(0);
            }
            .drop {
                transform: translateY(var(--drop-y)) translateZ(0);
            }
        }
    }
}

.checkbox {
    --border-radius: 5px;
    --border-radius-corner: 5px;
    input {
        &:checked {
            --border-width: 12px;
            & + svg {
                --tick-offset: 46.5px;
            }
        }
        & + svg {
            --dot-x: 14px;
            --dot-y: -14px;
            --dot-s: 1;
            --tick-offset: 20.5px;
            --tick-array: 16.5px;
            --tick-s: 1;
            --drop-s: 1;
            .tick {
                fill: none;
                stroke-width: 3px;
                stroke-linecap: round;
                stroke-linejoin: round;
                stroke: var(--c-active-inner);
                stroke-dasharray: var(--tick-array) 33px;
                stroke-dashoffset: var(--tick-offset);
                transform-origin: 10.5px 16px;
                transform: scale(var(--tick-s)) translateZ(0);
            }
            .dot {
                transform-origin: 10.5px 15.5px;
                transform: translate(var(--dot-x), var(--dot-y)) scale(var(--dot-s)) translateZ(0);
            }
            .drop {
                transform-origin: 25px -1px;
                transform: scale(var(--drop-s)) translateZ(0);
            }
        }
    }
}

.switch {
    --input-width: 38px;
    input {
        --input-background: var(--c-default);
        &:checked {
            --input-background: var(--c-active);
            & + svg {
                --default-s: 0;
                --default-x: 8px;
                --dot-s: 1;
                --dot-x: 0px;
            }
        }
        & + svg {
            --input-background: var(--c-default);
            --default-s: 1;
            --default-x: 0px;
            --dot-s: 0;
            --dot-x: -8px;
        }
    }
    .default {
        transform-origin: 12px 12px;
        transform: translateX(var(--default-x)) scale(var(--default-s)) translateZ(0);
    }
    .dot {
        transform-origin: 26px 12px;
        transform: translateX(var(--dot-x)) scale(var(--dot-s)) translateZ(0);
    }
}

.btn {
    appearance: none;
    border: none;
    position: relative;
    background: var(--c-black);
    color: #fff;
    outline: none;
    cursor: pointer;
    font-size: 14px;
    line-height: 21px;
    font-weight: 600;
    display: block;
    width: 132px;
    text-align: center;
    border-radius: 7px;
    margin: 0 auto;
    padding: 12px 0;
    span {
        position: relative;
        z-index: 1;
    }
    svg {
        display: block;
        width: 100%;
        height: 100%;
        position: absolute;
        left: 0;
        top: 0;
        fill: var(--c-active);
        circle {
            transition: transform var(--duration, .25s) ease-out;
            &.top-left {
                transform: translate(var(--spacing, -16px), var(--spacing, -40px));
            }
            &.middle-bottom {
                transform: translate(var(--spacing, 8px), var(--spacing, 40px));
            }
            &.top-right {
                transform: translate(var(--spacing, 40px), var(--spacing, -40px));
            }
            &.right-bottom {
                transform: translate(var(--spacing, 4px), var(--spacing, 40px));
            }
            &.left-bottom {
                transform: translate(var(--spacing, -40px), var(--spacing, 40px));
            }
        }
    }
    &:hover {
        --spacing: 0;
        --duration: .45s;
    }
}
